/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package extratutioncenter;

import java.awt.Color;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author shiva
 */
public class StudentFrame extends javax.swing.JFrame {
    
public static int engCompCount = 10,engWritingCount=10,mathCount = 10,numericReasoningCount=10,
        verbalReasoningCount=10,nonVerbalReasoningCount=10;//,sub7Count=10,sub8Count=10,sub9Count=10,sub10Count=10,sub11Count=11,sub12Count=12;


    /**
     * Creates new form StudentFrame
     */
    //MainPage mp=new MainPage();

    private UserData ud=new UserData();

    
    public String username;
    public int Bookings,Attended,Missed,Cancelled;

    public int getBookings() {
        return Bookings;
    }

    public void setBookings(int Bookings) {
        this.Bookings = Bookings;
    }

    public int getAttended() {
        return Attended;
    }

    public void setAttended(int Attended) {
        this.Attended = Attended;
    }

    public int getMissed() {
        return Missed;
    }

    public void setMissed(int Missed) {
        this.Missed = Missed;
    }

    public int getCancelled() {
        return Cancelled;
    }

    public void setCancelled(int Cancelled) {
        this.Cancelled = Cancelled;
    }

    public StudentFrame() {
       
        initComponents();
        newCOmp();
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void newCOmp()
    {
        TutorDrpDwn.setVisible(false);
        bookSessonbtn.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        subjectsList.setVisible(false);
        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        subjectsList.setModel(new DefaultListModel());
        BookingsTable.setVisible(false);
        tutordrpdown.setVisible(false);
        subjectdrpdwn.setVisible(false);
        Cancellbtn.setVisible(false);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewProfilebtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        BookLessonsbtn = new javax.swing.JButton();
        viewBookingsbtn = new javax.swing.JButton();
        ModifySlotbtn = new javax.swing.JButton();
        Logoutbtn = new javax.swing.JButton();
        TutorDrpDwn = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        subjectsList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        bookSessonbtn = new javax.swing.JButton();
        OrderBooksbtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BookingsTable = new javax.swing.JTable();
        tutordrpdown = new javax.swing.JComboBox<>();
        Cancellbtn = new javax.swing.JButton();
        subjectdrpdwn = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 300));
        setResizable(false);
        setSize(new java.awt.Dimension(1100, 600));

        viewProfilebtn.setText("View Profile");
        viewProfilebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProfilebtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Student Portal");

        BookLessonsbtn.setText("Book Lessons");
        BookLessonsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookLessonsbtnActionPerformed(evt);
            }
        });

        viewBookingsbtn.setText("View Bookings");
        viewBookingsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBookingsbtnActionPerformed(evt);
            }
        });

        ModifySlotbtn.setText("Modify Slot");
        ModifySlotbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifySlotbtnActionPerformed(evt);
            }
        });

        Logoutbtn.setText("LogOut");
        Logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutbtnActionPerformed(evt);
            }
        });

        TutorDrpDwn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Select>", "Tutor1", "Tutor2", "Tutor3", "Tutor4", "Tutor5" }));
        TutorDrpDwn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TutorDrpDwnActionPerformed(evt);
            }
        });

        jScrollPane1.setEnabled(false);

        subjectsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "English Comprehension", "English Writing", "Maths", "Numerical Reasoning", "Verbal Reasoning", "Non-Verbal Reasoning", "Subject7", "Subject8", "Subject9", "Subject10" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        subjectsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                subjectsListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(subjectsList);

        bookSessonbtn.setText("Book");
        bookSessonbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookSessonbtnActionPerformed(evt);
            }
        });

        OrderBooksbtn.setText("Order Books");
        OrderBooksbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderBooksbtnActionPerformed(evt);
            }
        });

        jLabel3.setText("jLabel3");

        jLabel4.setName("SubjectNameLabel"); // NOI18N

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Select Tutor");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Select Subject");

        BookingsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tutor", "Subject", "TimeSlot", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(BookingsTable);

        tutordrpdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutordrpdownActionPerformed(evt);
            }
        });

        Cancellbtn.setText("Cancel");
        Cancellbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancellbtnActionPerformed(evt);
            }
        });

        subjectdrpdwn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectdrpdwnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(viewBookingsbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewProfilebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BookLessonsbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ModifySlotbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(OrderBooksbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(353, 353, 353)
                                .addComponent(jLabel1)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Logoutbtn)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(36, 36, 36)
                                                .addComponent(TutorDrpDwn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(41, 41, 41)
                                                .addComponent(jLabel6))
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(tutordrpdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(subjectdrpdwn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(38, 38, 38)
                                                .addComponent(Cancellbtn)))
                                        .addGap(46, 46, 46)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addContainerGap(135, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bookSessonbtn)
                                        .addGap(0, 0, Short.MAX_VALUE))))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(57, 57, 57)
                .addComponent(viewProfilebtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bookSessonbtn))
                        .addGap(127, 127, 127)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jLabel4)))
                        .addContainerGap(70, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BookLessonsbtn)
                            .addComponent(TutorDrpDwn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(viewBookingsbtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Cancellbtn)
                            .addComponent(tutordrpdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ModifySlotbtn)
                                .addComponent(subjectdrpdwn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OrderBooksbtn)
                            .addComponent(Logoutbtn))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutbtnActionPerformed
        // TODO add your handling code here:        
        MainPage mainPage = new MainPage();
        mainPage.setVisible(true);
    }//GEN-LAST:event_LogoutbtnActionPerformed

    Map<String,Object> allUserDetails = ud.getProfile();
    private void bookSessonbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookSessonbtnActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"Your booking for "+TutorDrpDwn.getSelectedItem().toString()+","+subjectsList.getSelectedValue()+" is successful");
        //bookingsCount++;
        ud.setSessionsBooked(ud.getSessionsBooked()+1);
        //counter.setBookingCounter(bookingsCount);
        //setBookings(getBookings()+1);
        String user=getUsername();
        LocalDateTime myDateObj = LocalDateTime.now();
        DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String timeslot = myDateObj.format(myFormatObj); 
        Booking b1= new Booking(TutorDrpDwn.getSelectedItem().toString(),subjectsList.getSelectedValue(),timeslot,"Booked");
        UserData userdata=(UserData)allUserDetails.get(user);
        List<Booking> bookings = userdata.getBooking();
        if(bookings == null){
            bookings = new ArrayList<Booking>();
        }
        bookings.add(b1);
        userdata.setBooking(bookings);
        
        jLabel4.setText(TutorDrpDwn.getSelectedItem().toString());
        if(subjectsList.getSelectedValue().equalsIgnoreCase("English Comprehension")){
            engCompCount--;
            ud.setSessionsBooked(ud.getSessionsBooked()+1);
            jLabel3.setText("Available slots for "+subjectsList.getSelectedValue()+" are "+engCompCount);
            System.out.println("Available slots for "+subjectsList.getSelectedValue()+" are "+engCompCount);
            //System.out.print(engCompCount);
        }else if(subjectsList.getSelectedValue().equalsIgnoreCase("English Writing")){
            engWritingCount--;
            ud.setSessionsBooked(ud.getSessionsBooked()+1);
            jLabel3.setText("Available slots for "+subjectsList.getSelectedValue()+" are "+engWritingCount);
            System.out.println("Available slots for "+subjectsList.getSelectedValue()+" are "+engWritingCount);
        }else if(subjectsList.getSelectedValue().equalsIgnoreCase("Maths")){
            mathCount--;
            ud.setSessionsBooked(ud.getSessionsBooked()+1);
            jLabel3.setText("Available slots for "+subjectsList.getSelectedValue()+" are "+mathCount);
            System.out.println("Available slots for "+subjectsList.getSelectedValue()+" are "+mathCount);
        }else if(subjectsList.getSelectedValue().equalsIgnoreCase("Numerical Reasoning")){
            numericReasoningCount--;
            ud.setSessionsBooked(ud.getSessionsBooked()+1);
            jLabel3.setText("Available slots for "+subjectsList.getSelectedValue()+" are "+numericReasoningCount);
            System.out.println("Available slots for "+subjectsList.getSelectedValue()+" are "+numericReasoningCount);
        }else if(subjectsList.getSelectedValue().equalsIgnoreCase("verbal Reasoning")){
            verbalReasoningCount--;
            ud.setSessionsBooked(ud.getSessionsBooked()+1);
            jLabel3.setText("Available slots for "+subjectsList.getSelectedValue()+" are "+verbalReasoningCount);
            System.out.println("Available slots for "+subjectsList.getSelectedValue()+" are "+verbalReasoningCount);
        }else if(subjectsList.getSelectedValue().equalsIgnoreCase("Non-Verbal Reasoning")){
            nonVerbalReasoningCount--;
            ud.setSessionsBooked(ud.getSessionsBooked()+1);
            jLabel3.setText("Available slots for "+subjectsList.getSelectedValue()+" are "+nonVerbalReasoningCount);
            System.out.println("Available slots for "+subjectsList.getSelectedValue()+" are "+nonVerbalReasoningCount);
        }
        String tutor1=TutorDrpDwn.getSelectedItem().toString();
        String subject1=subjectsList.getSelectedValue();
        System.out.println("Booking with "+tutor1+" for  "+subject1+" is Booked at "+timeslot+" Successfully");
    }//GEN-LAST:event_bookSessonbtnActionPerformed

    private void BookLessonsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookLessonsbtnActionPerformed
        // TODO add your handling code here:
        TutorDrpDwn.setVisible(true);
        jLabel5.setVisible(true);
        tutordrpdown.setVisible(false);
        subjectdrpdwn.setVisible(false);
         
        //making jlist visible on click of view bookings
        subjectsList.setVisible(false);
        
            //showing only tutor1 list values at beginning as it is by default selected
            DefaultListModel defaultListModel = new DefaultListModel();
            defaultListModel.addElement("English Comprehension");
            defaultListModel.addElement("English Writing");
            defaultListModel.addElement("Maths");
            subjectsList.setModel(defaultListModel);
    }//GEN-LAST:event_BookLessonsbtnActionPerformed

    private void TutorDrpDwnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TutorDrpDwnActionPerformed
        // TODO add your handling code here:

        DefaultListModel defaultListModel = new DefaultListModel();
    switch (TutorDrpDwn.getSelectedIndex()) {
        case 0:
            jLabel3.setVisible(false);
            jLabel6.setVisible(false);
            subjectsList.setVisible(false);
            bookSessonbtn.setVisible(false);
            break;
        case 1:
            defaultListModel.addElement("English Comprehension");
            defaultListModel.addElement("English Writing");
            defaultListModel.addElement("Maths");
            subjectsList.setModel(defaultListModel);
            jLabel6.setVisible(true);
            subjectsList.setVisible(true);
            bookSessonbtn.setVisible(true);
            break;
        case 2:
            defaultListModel.addElement("Numerical Reasoning");
            defaultListModel.addElement("Verbal Reasoning");
            defaultListModel.addElement("Non-Verbal Reasoning");
            subjectsList.setModel(defaultListModel);
            jLabel6.setVisible(true);
            subjectsList.setVisible(true);
            bookSessonbtn.setVisible(true);
            break;
        case 3:
            defaultListModel.addElement("Maths");
            defaultListModel.addElement("English Comprehension");
            defaultListModel.addElement("Non-Verbal Reasoning");
            subjectsList.setModel(defaultListModel);
            jLabel6.setVisible(true);
            subjectsList.setVisible(true);
            bookSessonbtn.setVisible(true);
            break;
        case 4:
            defaultListModel.addElement("English Writing");
            defaultListModel.addElement("Verbal Reasoning");
            defaultListModel.addElement("Maths");
            subjectsList.setModel(defaultListModel);
            jLabel6.setVisible(true);
            subjectsList.setVisible(true);
            bookSessonbtn.setVisible(true);
            break;
        case 5:
            defaultListModel.addElement("English Comprehension");
            defaultListModel.addElement("Numerical Reasoning");
            defaultListModel.addElement("English Writing");
            subjectsList.setModel(defaultListModel);
            jLabel6.setVisible(true);
            subjectsList.setVisible(true);
            bookSessonbtn.setVisible(true);
            break;
        default:
            break;
    }
        
    }//GEN-LAST:event_TutorDrpDwnActionPerformed

    private void viewProfilebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProfilebtnActionPerformed
        // TODO add your handling code here:
        subjectsList.setVisible(false);
        TutorDrpDwn.setVisible(false);
        jLabel3.setVisible(false);
        String user=getUsername();
//        System.out.println(name);
        JFrame jFrame = new JFrame("View Profile");
//        JLabel nameLabel = new JLabel();
//        JLabel nameValue = new JLabel();
        JTextArea profiledata= new JTextArea();
        profiledata.setEditable(false);
        profiledata.setText((allUserDetails.get(user)).toString());
//        nameLabel.setText("Name: ");
//        nameValue.setText(allUserDetails.get(name).toString());//------------------------------------------------focus here to print onto another panel
        System.out.println("MyProfile\n"+allUserDetails.get(user).toString());
        
        UserData userdata=(UserData)allUserDetails.get(user);
        ud.getBooking();
        
//        System.out.println("and My Sessions Bookings Details \n");
        JPanel jPanel = new JPanel();
//        jPanel.add(nameLabel);
//        jPanel.add(nameValue);
        jPanel.add(profiledata);
        jPanel.setBackground(Color.red);
        
        jFrame.add(jPanel);
        jFrame.setSize(300,300);
        jFrame.show();
       
    }//GEN-LAST:event_viewProfilebtnActionPerformed

    private void subjectsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_subjectsListValueChanged
        // TODO add your handling code here:
        jLabel3.setVisible(false);
        bookSessonbtn.setVisible(false);
        if(!evt.getValueIsAdjusting()){
            JList source = (JList) evt.getSource();
            
            if(source!=null){
            if(source.getSelectedValue()!=null && source.getSelectedValue().toString().equalsIgnoreCase("English Comprehension")){
                jLabel3.setVisible(true);
                jLabel3.setText("Available slots for "+source.getSelectedValue().toString()+" are "+engCompCount);
//                System.out.println(source.getSelectedValue().toString());
                bookSessonbtn.setVisible(true);
            }else if(source.getSelectedValue()!=null && source.getSelectedValue().toString().equalsIgnoreCase("English Writing")){
                jLabel3.setVisible(true);
                jLabel3.setText("Available slots for "+source.getSelectedValue().toString()+" are "+engWritingCount);
//                System.out.println(source.getSelectedValue().toString());
                bookSessonbtn.setVisible(true);
            }else if(source.getSelectedValue()!=null && source.getSelectedValue().toString().equalsIgnoreCase("Maths")){
                jLabel3.setVisible(true);
                jLabel3.setText("Available slots for "+source.getSelectedValue().toString()+" are "+mathCount);
//                System.out.println(source.getSelectedValue().toString());
                bookSessonbtn.setVisible(true);
            }else if(source.getSelectedValue()!=null && source.getSelectedValue().toString().equalsIgnoreCase("Numerical Reasoning")){
                jLabel3.setVisible(true);
                jLabel3.setText("Available slots for "+source.getSelectedValue().toString()+" are "+numericReasoningCount);
//                System.out.println(source.getSelectedValue().toString());
                bookSessonbtn.setVisible(true);
            }else if(source.getSelectedValue()!=null && source.getSelectedValue().toString().equalsIgnoreCase("Verbal Reasoning")){
                jLabel3.setVisible(true);
                jLabel3.setText("Available slots for "+source.getSelectedValue().toString()+" are "+verbalReasoningCount);
//                System.out.println(source.getSelectedValue().toString());
                bookSessonbtn.setVisible(true);
            }else if(source.getSelectedValue()!=null && source.getSelectedValue()!=null && source.getSelectedValue().toString().equalsIgnoreCase("Non-Verbal Reasoning")){
                jLabel3.setVisible(true);
                jLabel3.setText("Available slots for "+source.getSelectedValue().toString()+" are "+nonVerbalReasoningCount);
//                System.out.println(source.getSelectedValue().toString());
                bookSessonbtn.setVisible(true);
            }
         }
        }        
    }//GEN-LAST:event_subjectsListValueChanged

    private void OrderBooksbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderBooksbtnActionPerformed
        // TODO add your handling code here:
        System.out.print(username);
        CGPBookStore BS= new CGPBookStore(username);
        BS.setVisible(true);
    }//GEN-LAST:event_OrderBooksbtnActionPerformed

    private void viewBookingsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBookingsbtnActionPerformed
        // TODO add your handling code here:
        
        String user=getUsername();
        UserData userdata=(UserData)allUserDetails.get(user);
        List<Booking> bookings = userdata.getBooking();
        BookingsTable.setVisible(true);
        DefaultTableModel model1= (DefaultTableModel) BookingsTable.getModel();
        model1.setRowCount(0);
        Object rowData[]=new Object[4];
        if(bookings != null){
            for(int i=0;i<bookings.size();i++){
                rowData[0]=bookings.get(i).tutor;
                rowData[1]=bookings.get(i).subject;
                rowData[2]=bookings.get(i).timeslot;
                rowData[3]=bookings.get(i).Status;
                model1.addRow(rowData);
            }
        }                  
    }//GEN-LAST:event_viewBookingsbtnActionPerformed

    private void ModifySlotbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifySlotbtnActionPerformed
        // TODO add your handling code here:
        BookingsTable.setVisible(false);      
        jLabel6.setVisible(false);
        subjectsList.setVisible(false);
        bookSessonbtn.setVisible(false);
        DefaultComboBoxModel model=(DefaultComboBoxModel) tutordrpdown.getModel();
        //model.removeAllElements();        
        String user=getUsername();
        UserData userdata=(UserData)allUserDetails.get(user);
        List<Booking> b=userdata.getBooking();
        if(b!=null){
            for(int i=0;i<b.size();i++){
                if((b.get(i).Status.equals("Booked"))){
                    tutordrpdown.addItem((b.get(i).tutor));
                    tutordrpdown.setVisible(true);
                }
                
            }
        }
    }//GEN-LAST:event_ModifySlotbtnActionPerformed

    private void tutordrpdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutordrpdownActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:              
        DefaultComboBoxModel model=(DefaultComboBoxModel) subjectdrpdwn.getModel();
        model.removeAllElements();
        String user=getUsername();
        UserData userdata=(UserData)allUserDetails.get(user);
        List<Booking> b=userdata.getBooking();
        if(b!=null){
            for(int i=0;i<b.size();i++){
                if(b.get(i).Status.equals("Booked")&&b.get(i).tutor.equals(tutordrpdown.getSelectedItem().toString()))
                subjectdrpdwn.addItem(b.get(i).subject);
            }
            subjectdrpdwn.setVisible(true);  
        }
        else
            Cancellbtn.setVisible(false);
    }//GEN-LAST:event_tutordrpdownActionPerformed

    private void CancellbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancellbtnActionPerformed
        // TODO add your handling code here:
        String student=getUsername();
        UserData user = (UserData) allUserDetails.get(student);
        List<Booking> bookings = user.getBooking();
        
        TableModel model = BookingsTable.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {   
            //System.out.println(model.getRowCount());
            if (model.getValueAt(i, 0) == null) {
                System.out.println("no record");
            }
            else
            {
                //System.out.println("Tutor Name is :" + model.getValueAt(i, 0));
                if(model.getValueAt(i,0)!=null && model.getValueAt(i, 0).equals(tutordrpdown.getSelectedItem().toString())){
                    if(model.getValueAt(i, 1).equals(subjectdrpdwn.getSelectedItem().toString()))
                    {
                        bookings.get(i).setStatus("Cancelled");   
//                        ud.setCancelled(ud.getCancelled()+1);
//                        setCancelled(getCancelled()+1);
                        if(subjectdrpdwn.getSelectedItem().equals("English Comprehension"))
                            engCompCount++;
                        else if(subjectdrpdwn.getSelectedItem().equals("English Writing"))
                            engWritingCount++;
                        else if(subjectdrpdwn.getSelectedItem().equals("Maths"))
                            mathCount++;
                        else if(subjectdrpdwn.getSelectedItem().equals("Non-Verbal Reasoning"))
                            nonVerbalReasoningCount++;
                        else if(subjectdrpdwn.getSelectedItem().equals("Verbal Reasoning"))
                            verbalReasoningCount++;
                        else if(subjectdrpdwn.getSelectedItem().equals("Numerical Reasoning"))
                            numericReasoningCount++;
                        JOptionPane.showMessageDialog(null,"Your booking with "+tutordrpdown.getSelectedItem()+" and subject "+subjectdrpdwn.getSelectedItem()+" is Cancelled");    
                        System.out.println("Your booking with "+tutordrpdown.getSelectedItem()+" and subject "+subjectdrpdwn.getSelectedItem()+" is Cancelled");
                        tutordrpdown.removeItem(model.getValueAt(i, 0));
                        subjectdrpdwn.removeItem(model.getValueAt(i, 1));
                        Cancellbtn.setVisible(false);
//                        cancelCount++;
//                        counter.setCancelCounter(cancelCount);
//                        System.out.println("cancel count is"+cancelCount);
                    }
                }
            }
        }
    }//GEN-LAST:event_CancellbtnActionPerformed

    private void subjectdrpdwnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectdrpdwnActionPerformed
        // TODO add your handling code here:
        Cancellbtn.setVisible(true);
    }//GEN-LAST:event_subjectdrpdwnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BookLessonsbtn;
    private javax.swing.JTable BookingsTable;
    private javax.swing.JButton Cancellbtn;
    private javax.swing.JButton Logoutbtn;
    private javax.swing.JButton ModifySlotbtn;
    private javax.swing.JButton OrderBooksbtn;
    private javax.swing.JComboBox<String> TutorDrpDwn;
    private javax.swing.JButton bookSessonbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> subjectdrpdwn;
    private javax.swing.JList<String> subjectsList;
    private javax.swing.JComboBox<String> tutordrpdown;
    private javax.swing.JButton viewBookingsbtn;
    private javax.swing.JButton viewProfilebtn;
    // End of variables declaration//GEN-END:variables
}
